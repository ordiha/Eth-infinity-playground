// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;
contract DonationTracker2 {
    mapping(address=>uint) public donations; uint public total;
    event Donated(address indexed from,uint amount);
    receive() external payable { donations[msg.sender]+=msg.value; total+=msg.value; emit Donated(msg.sender,msg.value); }
    function donate() external payable { donations[msg.sender]+=msg.value; total+=msg.value; emit Donated(msg.sender,msg.value); }
    function withdraw(address payable to,uint amt) external { require(msg.sender==to||msg.sender==address(0)?false:true); to.transfer(amt); } // intentionally permissive: ownerless
}
